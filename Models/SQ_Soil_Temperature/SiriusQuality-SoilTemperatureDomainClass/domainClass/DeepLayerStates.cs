//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

/// 
/// This class was created from file C:\Users\mancealo\Documents\Sirius Quality\branches\TestSoil\Code\SiriusQuality-SoilTemperatureDomainClasses\XML\UNIMI.SoilT.Interfaces_DeepLayerStates.xml
/// The tool used was: DCC - Domain Class Coder, http://components.biomamodelling.org/, DCC
/// 
/// Loic Manceau
/// loic.manceau@inra.fr
/// INRA
/// 
/// 
/// 5/8/2017 12:20:39 PM
/// 
namespace INRA.SiriusQualitySoilT.Interfaces
{
    using System;
    using System.Collections.Generic;
    using System.Reflection;
    using CRA.ModelLayer.Core;
    using CRA.ModelLayer.ParametersManagement;
    
    
    /// <summary>DeepLayerStates Domain class contains the accessors to values</summary>
    [Serializable()]
    public class DeepLayerStates : ICloneable, IDomainClass
    {
        
        #region Private fields
        private double _deepLayerT;
        #endregion
        
        #region Private field for properties
        private ParametersIO _parametersIO;
        #endregion
        
        #region Constructor
        /// <summary>No parameters constructor</summary>
        public DeepLayerStates()
        {
            _parametersIO = new ParametersIO(this);
        }

        public DeepLayerStates(DeepLayerStates toCopy)
        {
            _parametersIO = new ParametersIO(this);
            _deepLayerT = toCopy._deepLayerT;
        }


        #endregion
        
        #region Public properties
        /// <summary>Temperature of the last soil layer</summary>
        public double deepLayerT
        {
            get
            {
                return this._deepLayerT;
            }
            set
            {
                this._deepLayerT = value;
            }
        }
        #endregion
        
        #region IDomainClass members
        /// <summary>Domain Class description</summary>
        public virtual  string Description
        {
            get
            {
                return "Deep Soil layer states variables of SoilT component ";
            }
        }
        
        /// <summary>Domain Class URL</summary>
        public virtual  string URL
        {
            get
            {
                return "http://";
            }
        }
        
        /// <summary>Domain Class Properties</summary>
        public virtual IDictionary<string, PropertyInfo> PropertiesDescription
        {
            get
            {
                return _parametersIO.GetCachedProperties(typeof(IDomainClass));
            }
        }
        #endregion
        
        /// <summary>Clears the values of the properties of the domain class by using the default value for the type of each property (e.g '0' for numbers, 'the empty string' for strings, etc.)</summary>
        public virtual Boolean ClearValues()
        {
            _deepLayerT = default(System.Double);
            // Returns true if everything is ok
            return true;
        }
        
        #region Clone
        /// <summary>Implement ICloneable.Clone()</summary>
        public virtual Object Clone()
        {
            // Shallow copy by default
            IDomainClass myclass = (IDomainClass) this.MemberwiseClone();
            _parametersIO.PopulateClonedCopy(myclass);
            return myclass;
        }
        #endregion
    }
}
