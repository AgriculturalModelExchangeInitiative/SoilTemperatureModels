//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:2.0.50727.5477
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

/// This class was created from file C:\Users\Diprove\Desktop\Reimplementazione\SoilT\UNIMI.SoilT_perSoilBorne\UNIMI.SoilT\DataStructure\SoilTemperatureAuxiliary.xml
/// DCC - Domain Class Coder, http://agsys.cra-cin.it/tools , see Applications, DCC
namespace UNIMI.SoilT.Interfaces
{
    using System;
    using CRA.ModelLayer;
    using CRA.ModelLayer.Core;
    
    
    /// <summary>AuxiliaryVarInfoClasses contain the attributes for each variable in the domain class RainData. Attributes are valorized via the static constructor. The data-type VarInfo causes  a dependency to the assembly CRA.ModelLayer.dll</summary>
    public class AuxiliaryVarInfo : IVarInfoClass
    {
        
        #region Private fields
        static VarInfo _SurfaceTemperatureMaximum = new VarInfo();
        
        static VarInfo _SurfaceTemperatureMinimum = new VarInfo();
        #endregion
        
        /// <summary>Constructor</summary>
        static AuxiliaryVarInfo()
        {
            AuxiliaryVarInfo.DescribeVariables();
        }
        
        #region IVarInfoClass members
        /// <summary>Domain Class description</summary>
        public virtual  string Description
        {
            get
            {
                return "Auxiliary variables of SoilT component ";
            }
        }
        
        /// <summary>Reference to the ontology</summary>
        public  string URL
        {
            get
            {
                return "http://";
            }
        }
        
        /// <summary>Value domain class of reference</summary>
        public  string DomainClassOfReference
        {
            get
            {
                return "Auxiliary";
            }
        }
        #endregion
        
        #region Public properties
        /// <summary>Maximum surface soil temperature</summary>
        public static  VarInfo SurfaceTemperatureMaximum
        {
            get
            {
                return  _SurfaceTemperatureMaximum;
            }
        }
        
        /// <summary>Minimum surface soil temperature</summary>
        public static  VarInfo SurfaceTemperatureMinimum
        {
            get
            {
                return  _SurfaceTemperatureMinimum;
            }
        }
        #endregion
        
        #region VarInfo values
        /// <summary>Set VarInfo values</summary>
        static void DescribeVariables()
        {
            //   
            _SurfaceTemperatureMaximum.Name = "SurfaceTemperatureMaximum";
            _SurfaceTemperatureMaximum.Description = "Maximum surface soil temperature";
            _SurfaceTemperatureMaximum.MaxValue = 60;
            _SurfaceTemperatureMaximum.MinValue = -60;
            _SurfaceTemperatureMaximum.DefaultValue = 25;
            _SurfaceTemperatureMaximum.Units = "°C";
            _SurfaceTemperatureMaximum.URL = "http://";
            _SurfaceTemperatureMaximum.ValueType = VarInfoValueTypes.GetInstanceForName("Double");
            //   
            _SurfaceTemperatureMinimum.Name = "SurfaceTemperatureMinimum";
            _SurfaceTemperatureMinimum.Description = "Minimum surface soil temperature";
            _SurfaceTemperatureMinimum.MaxValue = 60;
            _SurfaceTemperatureMinimum.MinValue = -60;
            _SurfaceTemperatureMinimum.DefaultValue = 10;
            _SurfaceTemperatureMinimum.Units = "°C";
            _SurfaceTemperatureMinimum.URL = "http://";
            _SurfaceTemperatureMinimum.ValueType = VarInfoValueTypes.GetInstanceForName("Double");
        }
        #endregion
    }
}
