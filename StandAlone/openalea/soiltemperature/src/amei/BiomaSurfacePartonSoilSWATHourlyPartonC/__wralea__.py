
# -*- coding: latin-1 -*-
# This file has been generated at Fri Mar  3 09:30:55 2023

from openalea.core import *


__name__ = 'amei.crop2ml.biomasurfacepartonsoilswathourlypartonc'

__editable__ = True
__version__ = '0.0.1'
__license__ = 'CECILL-C'
__authors__ = 'AMEI Consortium'
__institutes__ = ''
__description__ = 'CropML Model library.'
__url__ = 'http://crop2ml.org'
__icon__ = ''
__alias__ = ['SurfacePartonSoilSWATHourlyPartonC']


__all__ = ['surfacetemperatureparton_model_surfacetemperatureparton', 'soiltemperatureswat_model_soiltemperatureswat', 'volumetricheatcapacitykluitenberg_model_volumetricheatcapacitykluitenberg', 'thermalconductivitysimulat_model_thermalconductivitysimulat', 'thermaldiffu_model_thermaldiffu', 'rangeofsoiltemperaturesdaycent_model_rangeofsoiltemperaturesdaycent', 'hourlysoiltemperaturespartonlogan_model_hourlysoiltemperaturespartonlogan', 'SurfacePartonSoilSWATHourlyPartonC']



surfacetemperatureparton_model_surfacetemperatureparton = Factory(name='SurfaceTemperatureParton',
                authors='AMEI Consortium (wralea authors)',
                description="Strategy for the calculation of soil surface temperature with Parton's method. Reference: Parton, W. J. 1984. Predicting soil temperatures in a shortgrass steppe. Soil Science 138:93-101.",
                category='Unclassified',
                nodemodule='surfacetemperatureparton',
                nodeclass='model_surfacetemperatureparton',
                inputs=[{'name': 'DayLength', 'interface': IFloat(min=0, max=24, step=1.000000), 'value': 10}, {'name': 'AirTemperatureMinimum', 'interface': IFloat(min=-60, max=50, step=1.000000), 'value': 5}, {'name': 'GlobalSolarRadiation', 'interface': IFloat(min=0, max=50, step=1.000000), 'value': 15}, {'name': 'AirTemperatureMaximum', 'interface': IFloat(min=-40, max=60, step=1.000000), 'value': 15}, {'name': 'SurfaceTemperatureMaximum', 'interface': IFloat(min=-60, max=60, step=1.000000), 'value': 25}, {'name': 'SurfaceTemperatureMinimum', 'interface': IFloat(min=-60, max=60, step=1.000000), 'value': 10}, {'name': 'AboveGroundBiomass', 'interface': IFloat(min=0, max=60, step=1.000000), 'value': 3}],
                outputs=[{'name': 'SurfaceSoilTemperature', 'interface': IFloat(min=-60, max=60, step=1.000000)}, {'name': 'SurfaceTemperatureMaximum', 'interface': IFloat(min=-60, max=60, step=1.000000)}, {'name': 'SurfaceTemperatureMinimum', 'interface': IFloat(min=-60, max=60, step=1.000000)}],
                widgetmodule=None,
                widgetclass=None,
               )




soiltemperatureswat_model_soiltemperatureswat = Factory(name='SoilTemperatureSWAT',
                authors='AMEI Consortium (wralea authors)',
                description='Strategy for the calculation of soil temperature with SWAT method. Reference: Neitsch,S.L., Arnold, J.G., Kiniry, J.R., Williams, J.R., King, K.W. Soil and Water Assessment Tool. Theoretical documentation. Version 2000. http://swatmodel.tamu.edu/media/1290/swat2000theory.pdf',
                category='Unclassified',
                nodemodule='soiltemperatureswat',
                nodeclass='model_soiltemperatureswat',
                inputs=[{'name': 'SoilProfileDepth', 'interface': IFloat(min=0, max=50, step=1.000000), 'value': 3}, {'name': 'SurfaceSoilTemperature', 'interface': IFloat(min=-60, max=60, step=1.000000), 'value': 25}, {'name': 'LayerThickness', 'interface': ISequence, 'value': 0.05}, {'name': 'LagCoefficient', 'interface': IFloat(min=0, max=1, step=1.000000), 'value': 0.8}, {'name': 'VolumetricWaterContent', 'interface': ISequence, 'value': 0.25}, {'name': 'SoilTemperatureByLayers', 'interface': ISequence, 'value': 15}, {'name': 'BulkDensity', 'interface': ISequence, 'value': 1.3}, {'name': 'AirTemperatureAnnualAverage', 'interface': IFloat(min=-40, max=50, step=1.000000), 'value': 15}],
                outputs=[{'name': 'SoilTemperatureByLayers', 'interface': ISequence}],
                widgetmodule=None,
                widgetclass=None,
               )




volumetricheatcapacitykluitenberg_model_volumetricheatcapacitykluitenberg = Factory(name='VolumetricHeatCapacityKluitenberg',
                authors='AMEI Consortium (wralea authors)',
                description='Strategy for the calculation of soil thermal diffusivity. Reference: J.M.H.Hendrickx, H. Xie, B. Borchers, J.B.J. Harrison, 2008. Global Prediction of Thermal Soil Regimes. SPIE Proceedings Volume 6953 Detection and Sensing of Mines, Explosive Objects, and Obscured Targets XIII.',
                category='Unclassified',
                nodemodule='volumetricheatcapacitykluitenberg',
                nodeclass='model_volumetricheatcapacitykluitenberg',
                inputs=[{'name': 'Silt', 'interface': ISequence, 'value': 20}, {'name': 'OrganicMatter', 'interface': ISequence, 'value': 1.5}, {'name': 'Sand', 'interface': ISequence, 'value': 30}, {'name': 'VolumetricWaterContent', 'interface': ISequence, 'value': 0.25}, {'name': 'BulkDensity', 'interface': ISequence, 'value': 1.3}, {'name': 'Clay', 'interface': ISequence, 'value': 0}, {'name': 'HeatCapacity', 'interface': ISequence, 'value': 20}],
                outputs=[{'name': 'HeatCapacity', 'interface': ISequence}],
                widgetmodule=None,
                widgetclass=None,
               )




thermalconductivitysimulat_model_thermalconductivitysimulat = Factory(name='ThermalConductivitySIMULAT',
                authors='AMEI Consortium (wralea authors)',
                description='Strategy for the calculation of thermal conductivity. Bristow, K.L., Thermal conductivity, in Methods of Soil Analysis. Part 4. Physical Methods, J.H. Dane and G.C. Topp, Editors. 2002, Soil Science Society of America Book Series #5: Madison, Wisconsin. p. 1209-1226. Diekkruger, B. (1996) SIMULAT - Ein Modellsystem zur Berechnung der Wasser- und Stoffdynamik landwirtschaftlich genutzter Standorte (SIMULAT - a model system for the calculation of water and matter dynamics on agricultural sites, in German). In: Wasser- und Stoffdynamik in Agrarôkosystemen, Sonderf.',
                category='Unclassified',
                nodemodule='thermalconductivitysimulat',
                nodeclass='model_thermalconductivitysimulat',
                inputs=[{'name': 'VolumetricWaterContent', 'interface': ISequence, 'value': 0.25}, {'name': 'BulkDensity', 'interface': ISequence, 'value': 1.3}, {'name': 'Clay', 'interface': ISequence, 'value': 0}],
                outputs=[{'name': 'ThermalConductivity', 'interface': ISequence}],
                widgetmodule=None,
                widgetclass=None,
               )




thermaldiffu_model_thermaldiffu = Factory(name='ThermalDiffu',
                authors='AMEI Consortium (wralea authors)',
                description='Strategy for the calculation of thermal diffusitivity. Bristow, K.L., Thermal conductivity, in Methods of Soil Analysis. Part 4. Physical Methods, J.H. Dane and G.C. Topp, Editors. 2002, Soil Science Society of America Book Series #5: Madison, Wisconsin. p. 1209-1226. Diekkruger, B. (1996) SIMULAT - Ein Modellsystem zur Berechnung der Wasser- und Stoffdynamik landwirtschaftlich genutzter Standorte (SIMULAT - a model system for the calculation of water and matter dynamics on agricultural sites, in German). In: Wasser- und Stoffdynamik in Agrarôkosystemen, Sonderf.',
                category='Unclassified',
                nodemodule='thermaldiffu',
                nodeclass='model_thermaldiffu',
                inputs=[{'name': 'ThermalConductivity', 'interface': ISequence, 'value': 1}, {'name': 'ThermalDiffusivity', 'interface': ISequence, 'value': 0.0025}, {'name': 'HeatCapacity', 'interface': ISequence, 'value': 20}],
                outputs=[{'name': 'ThermalDiffusivity', 'interface': ISequence}],
                widgetmodule=None,
                widgetclass=None,
               )




rangeofsoiltemperaturesdaycent_model_rangeofsoiltemperaturesdaycent = Factory(name='RangeOfSoilTemperaturesDAYCENT',
                authors='AMEI Consortium (wralea authors)',
                description='Strategy for the calculation of soil thermal conductivity.Reference: DAYCENT model written in C code ',
                category='Unclassified',
                nodemodule='rangeofsoiltemperaturesdaycent',
                nodeclass='model_rangeofsoiltemperaturesdaycent',
                inputs=[{'name': 'LayerThickness', 'interface': ISequence, 'value': 0.05}, {'name': 'SoilTemperatureByLayers', 'interface': ISequence, 'value': 15}, {'name': 'SurfaceTemperatureMaximum', 'interface': IFloat(min=-60, max=60, step=1.000000), 'value': 25}, {'name': 'ThermalDiffusivity', 'interface': ISequence, 'value': 0.0025}, {'name': 'SurfaceTemperatureMinimum', 'interface': IFloat(min=-60, max=60, step=1.000000), 'value': 10}],
                outputs=[{'name': 'SoilTemperatureMinimum', 'interface': ISequence}, {'name': 'SoilTemperatureRangeByLayers', 'interface': ISequence}, {'name': 'SoilTemperatureMaximum', 'interface': ISequence}],
                widgetmodule=None,
                widgetclass=None,
               )




hourlysoiltemperaturespartonlogan_model_hourlysoiltemperaturespartonlogan = Factory(name='HourlySoilTemperaturesPartonLogan',
                authors='AMEI Consortium (wralea authors)',
                description='Strategy for the calculation of hourly soil temperature. Reference: Parton, W.J.  and  Logan, J.A.,  1981. A model for diurnal variation  in soil  and  air temperature. Agric. Meteorol., 23: 205-216.',
                category='Unclassified',
                nodemodule='hourlysoiltemperaturespartonlogan',
                nodeclass='model_hourlysoiltemperaturespartonlogan',
                inputs=[{'name': 'SoilTemperatureMinimum', 'interface': ISequence, 'value': 15}, {'name': 'DayLength', 'interface': IFloat(min=0, max=24, step=1.000000), 'value': 10}, {'name': 'SoilTemperatureMaximum', 'interface': ISequence, 'value': 15}, {'name': 'HourOfSunset', 'interface': IFloat(min=0, max=24, step=1.000000), 'value': 17}, {'name': 'SoilTemperatureByLayersHourly', 'interface': ISequence, 'value': 15}, {'name': 'HourOfSunrise', 'interface': IFloat(min=0, max=24, step=1.000000), 'value': 6}],
                outputs=[{'name': 'SoilTemperatureByLayersHourly', 'interface': ISequence}],
                widgetmodule=None,
                widgetclass=None,
               )




SurfacePartonSoilSWATHourlyPartonC = CompositeNodeFactory(name='SurfacePartonSoilSWATHourlyPartonC',
                             description=('\n'
 '\n'
 '    SurfacePartonSoilSWATHourlyPartonC model\n'
 '    -Version: 001  -Time step: 1\n'
 '    Authors: simone.bregaglio@unimi.it\n'
 '    Reference: '
 "('http://bioma.jrc.ec.europa.eu/ontology/JRC_MARS_biophysical_domain.owl',)\n"
 '    Institution: Universiy Of Milan\n'
 '    ExtendedDescription: Composite strategy for the calculation of surface '
 "temperature with Parton's method and soil temperature with SWAT method. See "
 'also references of the associated strategies.\n'
 '    ShortDescription: None\n'),
                             category='Unclassified',
                             doc='',
                             inputs=[  {  'interface': IFloat(min=0, max=24, step=1.000000),
      'name': 'DayLength',
      'value': 10},
   {  'interface': IFloat(min=-60, max=50, step=1.000000),
      'name': 'AirTemperatureMinimum',
      'value': 5},
   {  'interface': IFloat(min=0, max=50, step=1.000000),
      'name': 'GlobalSolarRadiation',
      'value': 15},
   {  'interface': IFloat(min=-40, max=60, step=1.000000),
      'name': 'AirTemperatureMaximum',
      'value': 15},
   {  'interface': IFloat(min=0, max=60, step=1.000000),
      'name': 'AboveGroundBiomass',
      'value': 3},
   {  'interface': IFloat(min=0, max=50, step=1.000000),
      'name': 'SoilProfileDepth',
      'value': 3},
   {'interface': ISequence, 'name': 'LayerThickness', 'value': 0.05},
   {  'interface': IFloat(min=0, max=1, step=1.000000),
      'name': 'LagCoefficient',
      'value': 0.8},
   {'interface': ISequence, 'name': 'VolumetricWaterContent', 'value': 0.25},
   {'interface': ISequence, 'name': 'BulkDensity', 'value': 1.3},
   {  'interface': IFloat(min=-40, max=50, step=1.000000),
      'name': 'AirTemperatureAnnualAverage',
      'value': 15},
   {'interface': ISequence, 'name': 'Silt', 'value': 20},
   {'interface': ISequence, 'name': 'OrganicMatter', 'value': 1.5},
   {'interface': ISequence, 'name': 'Sand', 'value': 30},
   {'interface': ISequence, 'name': 'Clay'},
   {  'interface': IFloat(min=0, max=24, step=1.000000),
      'name': 'HourOfSunset',
      'value': 17},
   {  'interface': IFloat(min=0, max=24, step=1.000000),
      'name': 'HourOfSunrise',
      'value': 6}],
                             outputs=[  {  'interface': IFloat(min=-60, max=60, step=1.000000),
      'name': 'SurfaceSoilTemperature'},
   {  'interface': IFloat(min=-60, max=60, step=1.000000),
      'name': 'SurfaceTemperatureMaximum'},
   {  'interface': IFloat(min=-60, max=60, step=1.000000),
      'name': 'SurfaceTemperatureMinimum'},
   {'interface': ISequence, 'name': 'SoilTemperatureByLayers'},
   {'interface': ISequence, 'name': 'HeatCapacity'},
   {'interface': ISequence, 'name': 'ThermalConductivity'},
   {'interface': ISequence, 'name': 'ThermalDiffusivity'},
   {'interface': ISequence, 'name': 'SoilTemperatureMinimum'},
   {'interface': ISequence, 'name': 'SoilTemperatureRangeByLayers'},
   {'interface': ISequence, 'name': 'SoilTemperatureMaximum'},
   {'interface': ISequence, 'name': 'SoilTemperatureByLayersHourly'}],
                             elt_factory={  2: (  'amei.crop2ml.biomasurfacepartonsoilswathourlypartonc',
         'SurfaceTemperatureParton'),
   3: (  'amei.crop2ml.biomasurfacepartonsoilswathourlypartonc',
         'SoilTemperatureSWAT'),
   4: (  'amei.crop2ml.biomasurfacepartonsoilswathourlypartonc',
         'VolumetricHeatCapacityKluitenberg'),
   5: (  'amei.crop2ml.biomasurfacepartonsoilswathourlypartonc',
         'ThermalConductivitySIMULAT'),
   6: ('amei.crop2ml.biomasurfacepartonsoilswathourlypartonc', 'ThermalDiffu'),
   7: (  'amei.crop2ml.biomasurfacepartonsoilswathourlypartonc',
         'RangeOfSoilTemperaturesDAYCENT'),
   8: (  'amei.crop2ml.biomasurfacepartonsoilswathourlypartonc',
         'HourlySoilTemperaturesPartonLogan')},
                             elt_connections={  4313792832: (2, 0, '__out__', 0),
   4313792864: (2, 1, '__out__', 1),
   4313792896: (2, 2, '__out__', 2),
   4313792928: (3, 0, '__out__', 3),
   4313792960: (4, 0, '__out__', 4),
   4313792992: (5, 0, '__out__', 5),
   4313793024: (6, 0, '__out__', 6),
   4313793056: (7, 0, '__out__', 7),
   4313793088: (7, 1, '__out__', 8),
   4313793120: (7, 2, '__out__', 9),
   4313793152: (8, 0, '__out__', 10),
   4313793184: ('__in__', 0, 2, 0),
   4313793216: ('__in__', 1, 2, 1),
   4313793248: ('__in__', 2, 2, 2),
   4313793280: ('__in__', 3, 2, 3),
   4313793312: ('__in__', 4, 2, 6),
   4313793344: ('__in__', 5, 3, 0),
   4313793376: ('__in__', 6, 3, 2),
   4313793408: ('__in__', 7, 3, 3),
   4313793440: ('__in__', 8, 3, 4),
   4313793472: ('__in__', 9, 3, 6),
   4313793504: ('__in__', 10, 3, 7),
   4313793536: ('__in__', 11, 4, 0),
   4313793568: ('__in__', 12, 4, 1),
   4313793600: ('__in__', 13, 4, 2),
   4313793632: ('__in__', 8, 4, 3),
   4313793664: ('__in__', 9, 4, 4),
   4313793696: ('__in__', 14, 4, 5),
   4313793728: ('__in__', 8, 5, 0),
   4313793760: ('__in__', 9, 5, 1),
   4313793792: ('__in__', 14, 5, 2),
   4313793824: ('__in__', 6, 7, 0),
   4313793856: ('__in__', 0, 8, 1),
   4313793888: ('__in__', 15, 8, 3),
   4313793920: ('__in__', 16, 8, 5),
   4313793952: (2, 0, 3, 1),
   4313793984: (2, 1, 7, 2),
   4313794016: (2, 2, 7, 4),
   4313794048: (3, 0, 7, 1),
   4313794080: (4, 0, 6, 2),
   4313794112: (5, 0, 6, 0),
   4313794144: (6, 0, 7, 3),
   4313794176: (7, 0, 8, 0),
   4313794208: (7, 2, 8, 2)},
                             elt_data={  2: {  'block': False,
         'caption': 'SurfaceTemperatureParton',
         'delay': 0,
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 39.39073634204273,
         'posy': 52.20665083135391,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'SoilTemperatureSWAT',
         'delay': 0,
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 289.58063507938493,
         'posy': 156.5973871733966,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': 'VolumetricHeatCapacityKluitenberg',
         'delay': 0,
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 439.1529566195775,
         'posy': 106.28859857482183,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': 'ThermalConductivitySIMULAT',
         'delay': 0,
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 217.69796224528073,
         'posy': 101.2577197149644,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': 'ThermalDiffu',
         'delay': 0,
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 443.6647080885111,
         'posy': 166.04156769596204,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'block': False,
         'caption': 'RangeOfSoilTemperaturesDAYCENT',
         'delay': 0,
         'hide': True,
         'id': 7,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 274.19902487810975,
         'posy': 221.99881235154402,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   8: {  'block': False,
         'caption': 'HourlySoilTemperaturesPartonLogan',
         'delay': 0,
         'hide': True,
         'id': 8,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 314.3497312164021,
         'posy': 381.7292161520191,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 363.0,
                'posy': -52.0,
                'priority': 0,
                'use_user_color': False,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 363.0,
                 'posy': 529.0,
                 'priority': 0,
                 'use_user_color': False,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [(4, '25'), (5, '10')],
   3: [(5, '15')],
   4: [(6, '20')],
   5: [],
   6: [(1, '0.0025')],
   7: [],
   8: [(4, '15')],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {'position': [39.39073634204273, 52.20665083135391], 'userColor': None, 'useUserColor': False},
   3: {'position': [289.58063507938493, 156.5973871733966], 'userColor': None, 'useUserColor': False},
   4: {'position': [439.1529566195775, 106.28859857482183], 'userColor': None, 'useUserColor': False},
   5: {'position': [217.69796224528073, 101.2577197149644], 'userColor': None, 'useUserColor': False},
   6: {'position': [443.6647080885111, 166.04156769596204], 'userColor': None, 'useUserColor': False},
   7: {'position': [274.19902487810975, 221.99881235154402], 'userColor': None, 'useUserColor': False},
   8: {'position': [314.3497312164021, 381.7292161520191], 'userColor': None, 'useUserColor': False},
   '__in__': {'position': [363.0, -52.0], 'userColor': None, 'useUserColor': False},
   '__out__': {'position': [363.0, 529.0], 'userColor': None, 'useUserColor': False}},
                             lazy=True,
                             eval_algo=None,
                             )




